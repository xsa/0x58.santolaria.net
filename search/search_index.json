{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"@0x58","text":"","tags":["cybersecurity","infosec","openbsd","security"]},{"location":"#about","title":"About","text":"<p>Cloud Security Solutions Architect | IBM Inventor | Member of the IBM Academy of Technology (AoT)</p> <p>Open Source Advocate | Hacker | ex-OpenBSD (xsa@) | Field Hockey Coach</p> <ul> <li> github.com/xsa</li> <li> @0x58@infosec.exchange</li> <li> @0x58@bookrastinating.com</li> <li> youtube.com/@0x58_</li> <li> linkedin.com/in/xsantola</li> <li> keybase.io/xsa</li> <li> buymeacoffee.com/0x58</li> </ul>","tags":["cybersecurity","infosec","openbsd","security"]},{"location":"#projects","title":"Projects","text":"","tags":["cybersecurity","infosec","openbsd","security"]},{"location":"#current","title":"Current","text":"<ul> <li> InfoSec MASHUP Newsletter: infosec-mashup.santolaria.net</li> <li> List of {Cyber,Info}Security Events: github.com/xsa/infosec-events</li> </ul>","tags":["cybersecurity","infosec","openbsd","security"]},{"location":"#past","title":"Past","text":"<ul> <li> OpenBSD Project<ul> <li>openbsd-src commits</li> <li>openbsd-ports commits</li> <li>openbsd-www commits</li> </ul> </li> </ul>","tags":["cybersecurity","infosec","openbsd","security"]},{"location":"#articles-and-blog-posts","title":"Articles and Blog Posts","text":"<p>(and other content made of ascii chars written over the years)</p> <ul> <li>Jul 25, 2023: Combining EPP and EDR tools can boost your endpoint security [securityintelligence.com]</li> <li>May 03, 2023: Is Your Critical SaaS Data Secure? [securityintelligence.com]</li> <li>Feb 12, 2023: Book Club: \u201cInside The Box: A Proven System of Creativity for Breakthrough Results\u201d [medium.com]</li> <li>Jan 04, 2023: Monitoring My EPSON XP-8600 Series Printer using Prometheus and Grafana [medium.com]</li> <li>Dec 15, 2022: Welcome! \u2014 You have been appointed to our IBM Academy of Technology [medium.com]</li> <li>Dec 14, 2022: IBM Tech 2023 [medium.com]</li> <li>Nov 05, 2022: Create a Verified Keybase Link on your Mastodon profile [medium.com]</li> <li>Oct 04, 2022: {Cyber,Info}Security Events List [medium.com]</li> <li>Sep 07, 2022: Connecting Your Raspberry Pi to the IBM Watson IoT Platform [medium.com]</li> <li>Aug 03, 2022: Looking to Contribute to Open Source? My Top 5 Tips to Get Started [medium.com]</li> <li>Jul 07, 2022: Protecting the Family \u2014Blocking one ad at a time with Pi-Hole\u00ae [medium.com]</li> <li>May 24, 2022: Personal Knowledge Management, Logseq, and my New Way of Managing Ideas and Information [medium.com]</li> <li>Apr 19, 2022: Exposing our non-SSL application with NGINX and a \u2018sidecar\u2019 container [medium.com]</li> <li>Apr 10, 2022: IBM Cloud Secrets Manager and the External Secrets Operator [medium.com]</li> <li>Apr 08, 2022: Building and Deploying Your First Cloud Application on IBM Cloud from a non-Developer Point-of-View [medium.com]</li> <li>Jun 12, 2011: Unstatsppd: Your Beers Statistics Distribution by Day of Week</li> <li>Jun 10, 2011: HTC Incredible S, Android, Linux, and udev(7)</li> <li>Jan 08, 2011: Sync Birthdays Between Your Google Account and Your Android Native Calendar App</li> <li>Jan 05, 2011: IBM X-Force Videos on Security Trending Topics</li> <li>Oct 10, 2010: Can\u2019t Update Google Maps on Android Rooted Phone</li> <li>May 18, 2010: Branded Car Plate Holder Can Lead To Easy Theft?</li> <li>Apr 03, 2010: C64 Terminal...Or so...</li> <li>Aug 01, 2007: xmodmap to the rescue of PowerBook Belgian keyboard</li> <li>Jul 27, 2007: JHead to the rescue</li> <li>Nov 07, 2006: 8 bits per pixel is not enough</li> <li>Jun 01, 2006: OpenBSD: Running CVSweb in chroot</li> <li>Mar 19, 2004: OpenBSD: x509 authentication with Mac OS X racoon for road-warriors clients</li> <li>Mar 19, 2004: OpenBSD: x509 authentication with VPN Tracker on Mac OS X for road-warriors clients</li> <li>Oct 31, 2003: OpenBSD: SSH pubkey authentication</li> <li>May 21, 2003: OpenBSD: Using Procmail and Mutt to filter mailing lists</li> </ul>","tags":["cybersecurity","infosec","openbsd","security"]},{"location":"#publications","title":"Publications","text":"<ul> <li>Jan 01, 2004: The aMAZE LightBench: a web interface to a relational database of cellular processes</li> </ul>","tags":["cybersecurity","infosec","openbsd","security"]},{"location":"#my-gear","title":"My Gear","text":"<ul> <li> My Keyboard - Keychron K3 Ultra Slim Mechanical - https://amzn.to/449KQgp</li> <li> My Mouse - Logitec MX Master 3S - https://amzn.to/3O09uud</li> <li> My Webcam - Logitech Brio 4K - https://amzn.to/3NXs4SS</li> <li> My Blue Light Filtering Glasses - Ray-Ban Men's RB4089 Balorama - https://amzn.to/43W0LxW</li> </ul>","tags":["cybersecurity","infosec","openbsd","security"]},{"location":"resume/","title":"Xavier Santolaria's Resume","text":"<ul> <li>Citizenship(s):  Belgium,  Spain</li> <li>Date of Birth: 15/10/1980</li> <li>Status: Married</li> <li>Country of Residence:  Switzerland</li> <li>Telephone: On request</li> <li>E-mail: On request</li> <li>Website: 0x58.santolaria.net</li> </ul>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#professional-experience","title":"Professional Experience","text":"<p>Xavier \u00ab X \u00bb Santolaria (@0x58) is an IBM Inventor, Member of the IBM Academy of Technology, and currently serves as WW Security Solution Architect. In this role, Xavier drives security adoption in the Cloud pursuit as Cloud Route-To-Market (RTM) Lead.</p> <p>Xavier has 20+ years of experience in network and information security. He is also well versed into the Open Source community especially as former developer for the OpenBSD project.</p> <p>Prior to joining IBM, Xavier was Unix systems engineer for various companies as well as the Universit\u00e9 Libre de Bruxelles (ULB).</p> <p>Xavier was part of the honorees for the 2021 and 2022 Recognition Experience and received the IBM Service Delivery Excellence Award in October 2008.</p> <p>Specialties include: {Cloud, Network, Unix systems} security, Security Solutioning, Managed Security Services delivery, software development, team leadership.</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#career-history","title":"Career History","text":"","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#ibm","title":"IBM","text":"<p> www.ibm.com</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#jan-2019-present","title":"Jan 2019 - Present","text":"<p>WW Security Solution Architect: Cloud Route-To-Market (RTM) Lead driving security adoption in the Cloud pursuit.</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#apr-2017-dec-2018","title":"Apr 2017 - Dec 2018","text":"<p>MSS Transformation Leader: As Global Transformation Leader, I'm responsible to leading platform related transformation projects for MSS. Evaluate new products and understand if they could fit in our strategy. Recent projects include work on ITSM (BMC powered), IBM Resilient, Watson Knowledge Studio.</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#nov-2011-mar-2017","title":"Nov 2011 - Mar 2017","text":"<p>Manager, Managed Security Services: As Deployment &amp; Integration Manager, is a first line global people manage of employees in multiple countries (Belgium, Poland, South Africa), focused on the EMEA region.</p> <p>Acting as a critical escalation point for the team, for the greater IBM, business partners, and end customers in regards to technical or customer service issues as well as procedural questions.</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#sep-2010-oct-2011","title":"Sep 2010 - Oct 2011","text":"<p>Team Leader, Managed Security Services: As Team Leader, guiding the Deployment &amp; Integration EMEA team in providing services in a customer, multi-vendor, multi-protocol complex network/systems environments. Interacts frequently with customers and management to ensure high level of customer satisfaction. Also acting as technical resource and point of escalation for team members.</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#aug-2007-aug-2010","title":"Aug 2007 - Aug 2010","text":"<p>Sr. Integration Engineer, Managed Security Services: Responsible for implementing security devices and products that enable delivery of managed security services into a variety of simple to complex network environments.</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#csb-consulting","title":"CSB Consulting","text":"","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#sep-2005-aug-2007","title":"Sep 2005 - Aug 2007","text":"<p>Sr. System Administrator:</p> <ul> <li>Consultant role at the  European Commission (ITSS) in Brussels:<ul> <li>Linux (Red Hat) and Solaris servers administration and tuning</li> <li>Development of monitoring systems with SNMP-aware scripts for Windows and Unix systems</li> </ul> </li> </ul>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#universite-libre-de-bruxelles-ulb","title":"Universit\u00e9 Libre de Bruxelles (ULB)","text":"<p> www.ulb.ac.be</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#jan-2003-dec-2004","title":"Jan 2003 - Dec 2004","text":"<p>System &amp; Network Administrator:</p> <ul> <li>OpenBSD, Mac OS X, Solaris and Linux (Red Hat, SuSE) servers administration and tuning</li> <li>OpenBSD PF firewalls setup and administration</li> <li>Implemented remote secure VPN access with OpenBSD gateways</li> <li>Network monitoring and configuration</li> </ul>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#tagoracom","title":"Tagora.com","text":"","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#jul-2002-jan-2003","title":"Jul 2002 - Jan 2003","text":"<p>System &amp; Network Administrator:</p> <ul> <li>FreeBSD and Linux (Red Hat, Cobalt) servers administration and tuning</li> <li>Cisco PIX and Watchguard firewalls administration</li> </ul> <p>Note: this change is due to an acquisition. Not an employer change.</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#the-web-factory","title":"The Web Factory","text":"","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#nov-2001-jun-2002","title":"Nov 2001 - Jun 2002","text":"<p>System &amp; Network Administrator:</p> <ul> <li>FreeBSD and Linux (Slackware) servers administration and tuning</li> <li>Watchguard firewall administration</li> </ul> <p>Note: this change is due to an acquisition. Not an employer change.</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#pratec-corporation-sa","title":"Pratec Corporation S.A.","text":"","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#jun-2000-oct-2001","title":"Jun 2000 - Oct 2001","text":"<p>System &amp; Network Administrator: Linux (Slackware), Mac OS 9.x servers administration and tuning.</p>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#other-relevant-information","title":"Other Relevant Information","text":"","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#publications","title":"Publications","text":"<ul> <li>Jan 01, 2004: The aMAZE LightBench: a web interface to a relational database of cellular processes (C.Lemer, E.Antezana, F.Couche, F.Fays, X.Santolaria, R.Janky, Y.Deville, J.Richelle, S.Wodak)</li> </ul>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#other-job-related-activities","title":"Other Job-Related Activities","text":"<ul> <li>International Field Hockey Coach. As former player and team captain, led my team to domestic titles. Now as a coach, led teams to titles in Belgium, Switzerland (Servette HC), and on the international scene.</li> <li>Former OpenBSD developer (2004-2010). Worked on OpenRCS, OpenCVS, asms(4/MacPPC), Bluetooth, and the ports tree.</li> </ul>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"resume/#languages","title":"Languages","text":"<ul> <li> French: Native</li> <li> English: C2</li> <li> Spanish: B2</li> <li> Dutch: A1</li> </ul>","tags":["career","cybersecurity","cv","ibm","infosec","job","openbsd","resume","security"]},{"location":"articles/8-bits-per-pixel-is-not-enough/","title":"8 bits per pixel is not enough","text":""},{"location":"articles/8-bits-per-pixel-is-not-enough/#8-bits-per-pixel-is-not-enough","title":"8 bits per pixel is not enough","text":"<p>As I just moved in my new apartment, I still have not all my machines, and thus it is about time to use the ones I use less than wanted because of role duplication.</p> <p>In this case I'm speaking about laptops, and more specifically my PowerBook's (<code>PowerBook3,4</code> and <code>PowerBook6,8</code>).</p> <p>So, when I booted my \"old\" PowerBook (yeah, the G4 800 DVI - Ti) I felt somehow disgusted about the way the resolution looked in 8bit using the wsfb driver. Nonetheless, as always, you can expect good documentation about nearly anything in the OpenBSD project, and thus, I found what I wanted in the distribution notes of the XF4 for macppc.</p> <p>Knowing my PowerBook had an ATI graphic card, this was so easy that I just had to follow what was explained in /usr/X11R6/README. Here is the relevant line in the dmesg about the graphics card:</p> <p><code>vgafb0 at pci0 dev 16 function 0 \"ATI Radeon Mobility M7 LW\" rev 0x00, mmio</code></p> <p>Now I wonder why I never took the time to do that when back in the days I used to use this laptop quite often. Lazyness I believe ;-)</p> <p>Of course, this now brings us to another debate about the X Aperture and the security concerns around it. </p> <p>Published on Nov. 07, 2006</p>"},{"location":"articles/branded-car-plate-holder-can-lead-to/","title":"Branded car plate holder can lead to","text":""},{"location":"articles/branded-car-plate-holder-can-lead-to/#branded-car-plate-holder-can-lead-to-easy-theft","title":"Branded Car Plate Holder Can Lead To Easy Theft?","text":"<p>While driving to work this morning, something came to my attention. Not something new, or something unusual, I don't know why, but today that got me thinking -- Car Plate Holders.</p> <p>In a lot of countries, your car plate holder is/can be branded with either your car leasing company logo, your car brand logo, your country flag, and last but not least, your company logo! What could that change you'd say? Well, I could think of one use that would easily make thieves filter cars they want to break into to steal laptops with valuable data about your company, your customers that you left in your trunk while having an after-work drink with some colleagues. Sure the beer is good but does having your entry on DataLossDB.org do any good?</p> <p>Paranoid? Food for thoughts? Whatever?</p> <p>Published on May 18, 2010</p>"},{"location":"articles/c64-terminal-or-so/","title":"C64 terminal or so","text":""},{"location":"articles/c64-terminal-or-so/#c64-terminalor-so","title":"C64 Terminal...Or so...","text":"<p>A couple of days ago I was reinstalling an old laptop (Compaq Armada E500) with OpenBSD -current. I felt like playing around a little bit as it was a while I had time for that. A few chi-chat lines later, speaking of the desire to tweak my <code>xterm(1)</code> &amp; playing with the resource settings, our usual suspect -- betabug@#bsdcow -- referred to good old C64 terminal colors. Say no more:</p> <pre><code>XTerm*Background: DarkSlateBlue\nXTerm*Foreground: LightSteelBlue\n</code></pre> <p>Published on Apr. 03, 2010</p>"},{"location":"articles/cant-update-google-maps-on-android/","title":"Cant update google maps on android","text":""},{"location":"articles/cant-update-google-maps-on-android/#cant-update-google-maps-on-android-rooted-phone","title":"Can't Update Google Maps on Android Rooted Phone","text":"<p>Bummer. Every time I tried to update Google Maps via the Market it wouldn't install it. Throwing out an error about package signature or what not. It appears that it just does not work to update an Android stock app on a rooted phone. What then? You will first have to delete/uninstall the Google Maps packages, then just simply go back to the Market, search for the package, and install it. Bam; done.</p> <p>Below are the commands to use from your ADB shell to remove the package.</p> <p><code>adb root  adb remount  adb shell rm /system/app/Maps.apk  adb uninstall com.google.android.apps.maps</code> Published on Oct. 10, 2010</p>"},{"location":"articles/htc-incredible-s-android-linux-and-udev/","title":"Htc incredible s android linux and udev","text":""},{"location":"articles/htc-incredible-s-android-linux-and-udev/#htc-incredible-s-android-linux-and-udev7","title":"HTC Incredible S, Android, Linux, and udev(7)","text":"<p>So it all started because I wanted to take screen captures of my HTC Incredible S (I will not explain how to do that here as you'll find plenty of good tutorials on the interwebs).</p> <p>One of the steps involved the Dalvik Debug Monitor Server (DDMS) which provides all kind of things you could expect from a debugging tool, including a screen capture feature. Unfortunately, I quickly noticed that it wasn't really working as expected with my new HTC Incredible S device on my Linux laptop (running RHEL):</p> <p><pre><code>$ pwd\n/full/path/to/android-sdk-linux_x86/tools\n$ ./ddms\n\n(ddms:15838): Gtk-WARNING **: gtk_widget_size_allocate(): attempt to allocate widget with width -5 and height 16\n\n(ddms:15838): Gtk-WARNING **: gtk_widget_size_allocate(): attempt to allocate widget with width -5 and height 16\n09:01:27 E/DDMS: insufficient permissions for device\ncom.android.ddmlib.AdbCommandRejectedException: insufficient permissions for device\n    at com.android.ddmlib.AdbHelper.setDevice(AdbHelper.java:736)\n    at com.android.ddmlib.AdbHelper.executeRemoteCommand(AdbHelper.java:373)\n    at com.android.ddmlib.Device.executeShellCommand(Device.java:276)\n    at com.android.ddmuilib.SysinfoPanel.loadFromDevice(SysinfoPanel.java:159)\n    at com.android.ddmuilib.SysinfoPanel.deviceSelected(SysinfoPanel.java:126)\n    at com.android.ddmuilib.SelectionDependentPanel.deviceSelected(SelectionDependentPanel.java:52)\n    at com.android.ddms.UIThread.selectionChanged(UIThread.java:1684)\n    at com.android.ddmuilib.DevicePanel.notifyListeners(DevicePanel.java:752)\n    at com.android.ddmuilib.DevicePanel.notifyListeners(DevicePanel.java:740)\n    at com.android.ddmuilib.DevicePanel.access$1100(DevicePanel.java:56)\n    at com.android.ddmuilib.DevicePanel$1.widgetSelected(DevicePanel.java:357)\n    at org.eclipse.swt.widgets.TypedListener.handleEvent(Unknown Source)\n    at org.eclipse.swt.widgets.EventTable.sendEvent(Unknown Source)\n    at org.eclipse.swt.widgets.Widget.sendEvent(Unknown Source)\n    at org.eclipse.swt.widgets.Display.runDeferredEvents(Unknown Source)\n    at org.eclipse.swt.widgets.Display.readAndDispatch(Unknown Source)\n    at com.android.ddms.UIThread.runUI(UIThread.java:492)\n    at com.android.ddms.Main.main(Main.java:103)\n\n09:01:32 W/ddms: Unable to get frame buffer: insufficient permissions for device\n</code></pre> Not what I expected, but nothing that cannot be fixed. So after googling/fiddling/ranting a bit, <code>udev(7)</code> came to the rescue. Pretty much, it seems I needed another rule to be added. So here's how I did it:</p> <p>Look at the information that pertain to my HTC Incredible S:</p> <pre><code>$ lsusb\nBus 002 Device 006: ID 1267:0210 Logic3 / SpectraVideo plc\nBus 002 Device 002: ID 8087:0020 Intel Corp. Integrated Rate Matching Hub\nBus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 001 Device 009: ID 0bb4:0cac High Tech Computer Corp.\nBus 001 Device 005: ID 0a5c:217f Broadcom Corp. Bluetooth Controller\nBus 001 Device 003: ID 17ef:480f Lenovo Integrated Webcam [R5U877]\nBus 001 Device 002: ID 8087:0020 Intel Corp. Integrated Rate Matching Hub\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n</code></pre> <p>Create a specific <code>android.rules</code> file in custom rules directory <code>/etc/udev</code> (Note that it is one single line in the <code>.rules</code> file below)</p> <pre><code>$ id\nuid=500(xsa) gid=500(xsa) groups=500(xsa),496(desktop_admin_r)\n$ sudo -s\n# cat &gt; /etc/udev/android.rules\nSUBSYSTEMS==\"usb\", ATTRS{idVendor} ==\"0bb4\", ATTRS{idProduct} ==\"0cac\", MODE=\"0660\", OWNER=\"root\", GROUP=\"desktop_admin_r\"\n^D\n# ln -s ../android.rules /etc/udev/rules.d/90-android.rules\n</code></pre> <p>Reload the <code>udev(7)</code> rules and then launch again DDMS and you should be all set.</p> <pre><code># /etc/init.d/udev-post reload\n[...]\n# exit\n$ cd /full/path/to/android-sdk-linux_x86/tools\n$ ./ddms \n</code></pre> <p>Published on Jun. 10, 2011</p>"},{"location":"articles/ibm-x-force-videos-on-security-trending/","title":"Ibm x force videos on security trending","text":""},{"location":"articles/ibm-x-force-videos-on-security-trending/#ibm-x-force-videos-on-security-trending-topics","title":"IBM X-Force Videos on Security Trending Topics","text":"<p>Today I came across a few small videos recently posted in IBM Security Solutions YouTube Channel. Those videos were recorded by some of the IBM X-Force researchers on various trending topics, i.e., Malware, SEO, Browser Attacks, ... I have listed a few of them below but make sure you check &amp; subscribe to the YouTube Channel for more bits.</p> <ul> <li>Social Engineering Attacks, by Jon Larimer (@shydemeanor) http://youtu.be/hBr5u9A_bPw</li> <li>Web Browser Attacks, by Robert Freeman http://youtu.be/-PSsPxAGoiQ</li> <li>SEO Attacks, by Michelle Alvarez http://youtu.be/QHa51b6UptI</li> <li>Protocol Analysis Module (PAM), by Clinton McFadden http://youtu.be/Xb5lH-z8YkU</li> </ul> <p>IBM X-Force website: http://www.ibm.com/security/x-force</p> <p>Published on Jan. 05, 2011</p>"},{"location":"articles/jhead-to-rescue/","title":"Jhead to rescue","text":""},{"location":"articles/jhead-to-rescue/#jhead-to-the-rescue","title":"JHead to the rescue","text":"<p>Never needed to quickly rotate photos? Of course you did. Yesterday, I had to rotate a few dozen photos, there came JHead to the rescue.</p> <p><code>$ jhead -autorot *.JPG</code></p> <p>JHead uses the 'Orientation' tag of the Exif header to rotate the image so that it is upright. Easy enough, right?</p> <p>Published on Jul. 27, 2007</p>"},{"location":"articles/openbsd-cvsweb-in-chroot/","title":"OpenBSD: Running CVSweb in chroot","text":""},{"location":"articles/openbsd-cvsweb-in-chroot/#software-versions-used","title":"Software versions used","text":"<ul> <li>OpenBSD 3.3-stable</li> <li>Apache 1.3.27 (from the base install)</li> <li>CVSweb 2.0.6</li> </ul>"},{"location":"articles/openbsd-cvsweb-in-chroot/#installing-cvsweb","title":"Installing cvsweb","text":"<pre><code>$ cd /usr/ports/devel/cvsweb/\n$ sudo make install clean\n</code></pre>"},{"location":"articles/openbsd-cvsweb-in-chroot/#creating-the-directory-structure-and-copying-the-required-files-into-the-chroot-environment","title":"Creating the directory structure and copying the required files into the chroot environment","text":"<p>In order to make CVSweb operate in a chroot environment, it is necessary to copy all of the relevant tools, libraries, and perl modules that CVSweb employs into <code>/var/www</code>. This is because <code>/var/www</code> becomes the root, or \"<code>/</code>\" directory for Apache and all the programs executed from Apache, for instance, a module or CGI script like CVSweb.</p> <p>First, we create the basic directory structure: <pre><code># cd /var/www\n# mkdir {tmp,usr}\n# chown www:www tmp     (needs to be writeable for the www user)\n\n# cd /var/www/usr\n# mkdir -p {bin,lib,libdata/perl5,libexec}\n\n# cd /var/www/usr/libdata/perl5\n# mkdir -p {File,IPC,Time,warnings,`machine`-openbsd/5.8.0}\n</code></pre></p> <p>Now, the required binaries: <pre><code># cd /var/www/usr/bin\n# cp -p /usr/bin/{co,cvs,diff,perl,rcsdiff,rlog,uname} .\n</code></pre></p> <p>Next, the libraries that the binaries are linked to:</p> <p>NOTE: Wildcards will, of course, copy any old, unused libraries that are lurking around (for example, from an upgrade). If you wish to diminish the number of libraries required to be copied, there are several methods available (see below).</p> <pre><code># cd /var/www/usr/lib\n# cp -p /usr/lib/lib{asn1,c,crypto,des,gssapi,kafs,krb,krb5}.so* .\n# cp -p /usr/lib/lib{m,perl,util,z}.so* .\n</code></pre> <ol> <li>If you have old dynamic libraries around and only want to copy the ones which will actually be used, run ldd(1) on every needed binary.</li> <li>By default, cvs is built with Kerberos support. You can disable Kerberos support by adding the following lines to mk.conf(5):</li> </ol> <pre><code>KERBEROS=no\nKERBEROS5=no\n</code></pre> <p>and then rebuilding the cvs program. This will reduce the number of required shared libraries by five.</p> <p>Now, the run-time link-editor: <pre><code># cd /var/www/usr/libexec\n# cp -p /usr/libexec/ld.so .\n</code></pre> And finally, the perl modules: <pre><code># cd /var/www/usr/libdata/perl5\n# cp -p /usr/libdata/perl5/{Carp,Exporter,Symbol,base,integer}.pm .\n# cp -p /usr/libdata/perl5/{strict,warnings,vars}.pm .\n# cp -p /usr/libdata/perl5/File/Basename.pm ./File/\n# cp -p /usr/libdata/perl5/IPC/Open{2,3}.pm ./IPC/\n# cp -p /usr/libdata/perl5/Time/Local.pm ./Time/\n# cp -p /usr/libdata/perl5/warnings/register.pm ./warnings/\n\n# cd /var/www/usr/libdata/perl5/`machine`-openbsd/5.8.0\n# cp -p /usr/libdata/perl5/`machine`-openbsd/5.8.0/{Config,Cwd}.pm .\n</code></pre></p>"},{"location":"articles/openbsd-cvsweb-in-chroot/#where-to-put-my-cvsroot-now","title":"Where to put my cvsroot now?","text":"<p>You will need to put your CVSROOT in the chroot environment just like what was done with the binaries and libraries. The logical choice is to use <code>/var/www/cvs/</code>. If you don't have enough space on your <code>/var/www</code> partition for your CVS repository, you can always use an NFS share mounted over the loopback interface.</p> <p>NOTE: The ownership of the CVS repository does not have to be changed. The files simply have to be readable by the www user. If they were owned by the www user and a vulnerability was found in CVSweb, the CVS repository could be compromised.</p>"},{"location":"articles/openbsd-cvsweb-in-chroot/#editing-the-cvswebconf","title":"Editing the cvsweb.conf","text":"<p>We'll need to edit the <code>/var/www/conf/cvsweb/cvsweb.conf</code> file so the CVSweb will find the correct path to our CVSROOT. Do as follows:</p> <p><code># $EDITOR /var/www/conf/cvsweb/cvsweb.conf</code></p> <p>Then find the following (line 46):</p> <p><code>'local'   =&gt; ['Local Repository', '/home/cvs'],</code></p> <p>and replace it with:</p> <p><code>'local'   =&gt; ['Local Repository', '/cvs'],</code></p>"},{"location":"articles/openbsd-cvsweb-in-chroot/#editing-the-cvsweb-cgi-script","title":"Editing the CVSweb cgi script","text":"<p>We'll need to edit the <code>/var/www/cgi-bin/cvsweb</code> cgi script to make it find our config file. Do as follows:</p> <p><code># $EDITOR /var/www/cgi-bin/cvsweb</code></p> <p>Then find the following (line 160):</p> <p><code>for (\"$mydir/cvsweb.conf\", '/var/www/conf/cvsweb/cvsweb.conf') {</code></p> <p>and replace it with:</p> <p><code>for (\"$mydir/cvsweb.conf\", '/conf/cvsweb/cvsweb.conf') {</code></p>"},{"location":"articles/openbsd-cvsweb-in-chroot/#lets-finish","title":"Let's finish","text":"<p>Hopefully after following all the steps in this document, you can view your CVS repository through the CVSweb interface with the a URL like <code>http://yoursite.com/cgi-bin/cvsweb/</code></p> <p>Published on Jun. 01, 2006 on open.bsdcow.net</p>"},{"location":"articles/openbsd-procmail-mutt/","title":"OpenBSD: Using Procmail and Mutt to filter mailing lists","text":"<p>In this tutorial we'll see how to use filters to filter (d'oh) mails coming from various mailing lists. Have you ever thought about not subcribing to mailing lists because it would flood your INBOX? Here is one of the solutions available. Enjoy!</p>"},{"location":"articles/openbsd-procmail-mutt/#software-versions-used","title":"Software versions used","text":"<ul> <li>OpenBSD 3.2-STABLE</li> <li>Procmail 3.22</li> <li>Mutt 1.4i</li> </ul>"},{"location":"articles/openbsd-procmail-mutt/#installing-and-configuring-procmail","title":"Installing and configuring Procmail","text":"<p>First of all, what is Procmail? Procmail can be used to create mail-servers, mailing lists, sort your incoming mail into separate folders/files, preprocess your mail, start any programs upon mail arrival or selectively forward certain incoming mail automatically to someone.</p> <p>Let's install it now: change directory to the procmail location in the ports tree, build and install it:</p> <pre><code># cd /usr/ports/mail/procmail\n# make install clean\n</code></pre> <p>NOTE: if you do not have enough diskspace to install from the ports tree, use the pkg_add(1) way.</p> <p>Now that <code>procmail</code> is installed, let's configure it to suit our needs.</p> <p>Create a configuration file in your home directory. Note that your home directory should have the execute/search bit (o+x) set and <code>.procmailrc</code> should be world readable (o+r):</p> <p><code>$ $EDITOR ~/.procmailrc</code></p> <p>NOTE: the <code>$EDITOR</code> variable must be set to your favorite text editor. For instance, export <code>EDITOR=vi</code> for Bourne Shells users and <code>setenv EDITOR</code> vi for C Shells users.</p> <p>Now edit it with the following content: <pre><code>VERBOSE=off\n\n# Mutt and Elm use 'Mail'; Pine uses 'mail'\nMAILDIR=$HOME/Mail/\n\n# Directory for storing procmail log and rc files\nPMDIR=$HOME/.procmail   # or $HOME/.Procmail for easier TAB-completion\n\nLOGFILE=$PMDIR/log\nINCLUDERC=$PMDIR/rc.lists\n</code></pre></p> <p>Now we got our own configuration file, let's see about our <code>rc.lists</code> file that will contain the actions we want procmail to take when we receive a mail that matches one of our rules:</p> <p><code>$ $EDITOR ~/.procmail/rc.lists</code></p> <p>As a first example, we will redirect mails sent by <code>owner-misc@OpenBSD.org</code> to the <code>~/Mail/IN.OpenBSD-misc</code> mailbox. Mails that do not match this rule are still delivered to the user's default mailbox (<code>/var/mail/$LOGNAME</code>).</p> <pre><code>:0\n* ^Sender:.*owner-misc@OpenBSD.org\nIN.OpenBSD-misc\n</code></pre> <p>You can, of course, do the same for the any other OpenBSD.org mailing list.</p>"},{"location":"articles/openbsd-procmail-mutt/#installing-and-configuring-mutt","title":"Installing and configuring mutt","text":"<p>You might already be accustomed to installing OpenBSD ports or packages so we'll do it quick: <pre><code># cd /usr/ports/mail/mutt\n# make install clean\n</code></pre> Once you got Mutt installed, get you a default dot-muttrc configuration and let's start editing it so Mutt will inform you when new mails have arrived in your different mailboxes.</p> <p><code>$ $EDITOR ~/.muttrc</code></p> <p>NOTE: <code>~/.mutt/muttrc</code> is also a valid location for the configuration file.</p> <p>and add the following into it: <pre><code>mailboxes ! =IN.OpenBSD-misc =IN.OpenBSD-tech =IN.OpenBSD-ports \\\n            =IN.OpenBSD-sources-changes =IN.OpenBSD-hppa =IN.OpenBSD-sparc\n</code></pre></p> <p>This way, Mutt will notify you when new mails have arrived in the above mailboxes. When starting Mutt, you'll see the following message in the bottom of your screen:</p> <p><code>- Mutt 1.4i [2] (moo:/var/mail/xsa) 2 more to go.</code></p> <p>Now press the <code>c</code> key and Mutt will ask you if you want to open the mailbox <code>IN.OpenBSD-misc</code> (assuming new mails have entered this mailbox).</p> <p><code>Open mailbox ('?' for list): =IN.OpenBSD-misc</code></p> <p>press <code>Enter</code> and it will proceed it. If you want to have a look at the other filled mailboxes, just press the <code>c</code> key again and repeat the operation.</p>"},{"location":"articles/openbsd-procmail-mutt/#quick-sendmail-configuration","title":"Quick Sendmail configuration","text":"<p>By default, <code>/etc/mail/localhost.cf</code> and <code>/etc/mail/sendmail.cf</code> do not have the Procmail feature enabled. To do so we'll have to do a quick hack in the configuration file located in <code>/usr/share/sendmail/cf/openbsd-localhost.mc</code> then rebuild the <code>localhost.cf</code> we use:</p> <pre><code># cd /usr/share/sendmail/cf\n# $EDITOR openbsd-localhost.mc\n</code></pre> <p>In this file, add:</p> <p><code>FEATURE(local_procmail)</code></p> <p>and replace:</p> <p><code>MAILER(local)dnl</code></p> <p>by</p> <p><code>MAILER(procmail)dnl</code></p> <p>Now generate a new <code>localhost.mc</code> with the following commands (assuming you are still in <code>/usr/share/sendmail/cf/</code>):</p> <p><code># m4 ../m4/cf.m4 openbsd-localhost.mc &gt; localhost.cf</code></p> <p>Then backup your existing configuration, replace it with the new one and restart Sendmail:</p> <pre><code># cp /etc/mail/localhost.cf /etc/mail/localhost.cf.orig\n# cp localhost.cf /etc/mail/localhost.cf\n# kill -HUP $(head -n1 /var/run/sendmail.pid)\n</code></pre> <p>Now you have finished with the various configurations, subscribe to the OpenBSD.org mailing lists and give it a try :-)</p>"},{"location":"articles/openbsd-procmail-mutt/#related-links","title":"Related links","text":"<ul> <li>Procmail official homepage</li> <li>Mutt official homepage</li> <li>Han Boetes' Mutt configuration file</li> <li>Sendmail official homepage</li> </ul> <p>Published on May 21, 2003 on open.bsdcow.net</p>"},{"location":"articles/openbsd-ssh-pubkey-auth/","title":"OpenBSD: SSH pubkey authentication","text":"<p>In this document only SSH protocol v2 key generation is described, hope it satisfies you.</p>"},{"location":"articles/openbsd-ssh-pubkey-auth/#software-versions-used","title":"Software versions used.","text":"<ul> <li>OpenBSD 3.2-current, from 13 December 2002 snapshots</li> <li>OpenSSH 3.5 (being in the base system)</li> </ul>"},{"location":"articles/openbsd-ssh-pubkey-auth/#generating-your-keys","title":"Generating your keys","text":"<p>If you want to use the SSH pubkey authentication feature, you will, of course, have to create your public and private keys. Let's see how to generate those for the SSH protocol v2 with a DSA encryption. To accomplish this we will use ssh-keygen(1):</p> <p><code>$ ssh-keygen -t dsa</code></p> <p>Which will output: <pre><code>Generating public/private dsa key pair.\nEnter file in which to save the key (/home/xsa/.ssh/id_dsa): \nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /home/xsa/.ssh/id_dsa.\nYour public key has been saved in /home/xsa/.ssh/id_dsa.pub.\nThe key fingerprint is:\n6b:bf:7d:83:b3:87:22:56:55:13:d1:df:1b:4d:d2:0b xsa@core\n ```\nWhen [ssh-keygen(1)](http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1) asks\nyou in which file you want it to save the key, just press *&lt;return&gt;* (we will stick with the default path).\nThen when you'll be asked for a passphrase enter one, and confirm it by entering it again one step later.\n\n**NOTE**: no passphrase can be entered by just pressing *&lt;return&gt;*.\nThis is often used when the concerned account is used for automated data, backups transfers.\n\nNow you are done with generating your keys, let's have a closer look at them:\n</code></pre> $ ls -l ~/.ssh/id_* -rw-------  1 xsa  xsa  744 Dec 27 11:41 .ssh/id_dsa -rw-r--r--  1 xsa  xsa  598 Dec 27 11:41 .ssh/id_dsa.pub <pre><code>The `id_dsa` key is your **_private_** key, which means that **you should keep this file away from other people**,\nalso, be sure it's only readable/writable by you and _only_ you ([chmod(1)](http://www.openbsd.org/cgi-bin/man.cgi?query=chmod&amp;sektion=1) 0600).\n\nThe `id_dsa.pub` key is your **_public_** key, which will be added on systems you want to\nhave access to. We will see how to add that key later.\n\n**NOTE**: `~/.ssh/` should be [chmod](http://www.openbsd.org/cgi-bin/man.cgi?query=chmod&amp;sektion=1)'d 0700, for security matters.\n\n`drwx------  2 xsa   xsa     512 Dec 27 21:14 .ssh/`\n\n## Placing the key on the remote server.\nTo be able to log into another system using your keys,\nyou will first have to place your public key on the remote machine in a file called\n`authorized_keys` (for protocol v2) which is located in your `~/.ssh/` directory.\n\nDo as follows:\n\n`$ cat .ssh/id_dsa.pub | ssh newmachine \"cat &gt;&gt; .ssh/authorized_keys\"`\n\n## Configure the OpenSSH SSH daemon (sshd).\n\nTo configure the [OpenSSH SSH daemon (sshd)](http://www.openssh.org/), you'll only have to edit\n[`/etc/ssh/sshd_config`](http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5)\n(since OpenBSD 3.1 that's the location of this file, [before](http://www.openbsd.org/faq/upgrade-minifaq.html#3.0.4) it was `/etc/sshd_config`).\n\nLet's have a closer look at it, first [su](http://www.openbsd.org/cgi-bin/man.cgi?query=su&amp;sektion=1) to root:\n</code></pre> $ su - Password:</p>"},{"location":"articles/openbsd-ssh-pubkey-auth/#_1","title":"OpenBSD: SSH pubkey authentication","text":"<p><pre><code>Then, edit [`/etc/ssh/sshd_config`](http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5):\n\n`# vi /etc/ssh/sshd_config`\n\nand set the following options:\n</code></pre> PubkeyAuthentication    yes AuthorizedKeysFile      .ssh/authorized_keys <pre><code>You also might want to disable the `PasswordAuthentication` option, so people can only login through key authentication:\n\n  PasswordAuthentication no\n\n\nNow you are done with the configuration, restart your [sshd](http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8):\n\n`# kill -HUP $(/var/run/sshd.pid)`\n\n## Let's test our setup.\nTo test what we have configured so far, the easiest way would be to connect to the remote machine:\n</code></pre> $ ssh user@host Enter passphrase for key '/home/user/.ssh/id_dsa': <pre><code>Enter your passphrase and ... do whatever you need to on the machine :-)\n\n**NOTE**: to increase verbosity during the connection to the host, add the `-v` option.\nMultiple `-v` options increases the verbosity. Maximum is 3.\n\n## Managing your keys with ssh-agent\n[ssh-agent(1)](http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-agent&amp;sektion=1) is a\nprogram to hold private keys used for public key authentication (RSA, DSA).\nThe idea is that `ssh-agent` is started in the beginning of an X-session or a login session,\nand all other windows or programs are started as clients to the `ssh-agent` program.\nThrough use of environment variables the agent can be located and automatically\nused for authentication when logging in to other machines using ssh(1).\n\nInitially, the agent does not have any private keys. Keys are added using [ssh-add(1)](http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&amp;sektion=1).\nWhen run without any arguments, it adds the default location files\n(`~/.ssh/id_rsa`, `~/.ssh/id_dsa` and `~/.ssh/identity`).\nIf your private key is encrypted with a passphrase,\n[ssh-add(1)](http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&amp;sektion=1) will prompt you for it:\n</code></pre> $ eval $(ssh-agent) $ ssh-add ~/.ssh/id_dsa Enter passphrase for /home/user/.ssh/id_dsa: Identity added: /home/user/.ssh/id_dsa (/home/user/.ssh/id_dsa) $ <pre><code>It then sends the identity to the agent. The agent can manage several identities\nand to have a look at the ones held by the agent, just run the `ssh-add -l` command.\n\nFor the future connections to the remote machine(s) having your key, you\nwill notice that you are not prompted anymore to enter your passphrase.\nThat's the use of [ssh-agent(1)](http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-agent&amp;sektion=1).\n</code></pre> $ ssh -v user@host [...] $ <pre><code>... you are now on the remote host without entering any password/passphrase.\n\nIf you want to remove all the identities stored in the agent (because you feel quite unsafe),\njust run the following command:\n</code></pre> $ ssh-add -D All identities removed. $ ```</p> <p>... or read the ssh-agent(1) and ssh-add(1) manuals for more information.</p> <p>NOTE: The use of ssh-agent(1) might be very useful and practical but keep in mind that if someone gains access to your computer, it will be easy for him to connect to any of the remote machines you have configured with your keys without entering any password. So think twice before using ssh-agent(1). Indeed if you only have a few keys, you would rather remember your passphrases and use the <code>-i</code> option with <code>ssh(1)</code>. </p> <p>Published on Oct. 31, 2003 on open.bsdcow.net</p>"},{"location":"articles/sync-birthdays-between-your-google/","title":"Sync birthdays between your google","text":""},{"location":"articles/sync-birthdays-between-your-google/#sync-birthdays-between-your-google-account-and-your-android-native-calendar-app","title":"Sync Birthdays Between Your Google Account and Your Android Native Calendar App","text":"<p>While the sync between my HTC Magic (running <code>Android Eclair - 2.1</code>) and my Google Mail account works as expected, by default I was missing my contacts' birthdays information. To fix this somewhat-lack-of-default-support annoyance, I had to:</p> <ol> <li>Go to my <code>Google Calendar Settings</code></li> <li><code>Browse interesting calendars</code></li> <li>Select the <code>More</code> tab</li> <li>Subscribe to  <code>Contacts' birthdays and events</code></li> <li>Sync mobile handheld with Google Mail account</li> </ol> <p>Although this does what I wanted, I'm still looking to enable automatic reminders for birthdays. If anyone's got any tips to easily enable that in the native calendar app, shoot me an e-mail. Thanks.</p> <p>Published on Jan. 8, 2011</p>"},{"location":"articles/unstatsppd-your-beers-statistics/","title":"Unstatsppd your beers statistics","text":""},{"location":"articles/unstatsppd-your-beers-statistics/#unstatsppd-your-beers-statistics-distribution-by-day-of-week","title":"Unstatsppd: Your Beers Statistics Distribution by Day of Week","text":"<p>As I had some free time on my hands this week-end, and that I wanted to know on which day of the week I most enjoy beer drinking, I fired up my favorite text editor and started <code>unstatsppd.py</code>.</p> <p>No rocket science whatsoever but an easy mean to gather those statistics and display them using the Google Charts Tools API.</p> <p>Code is available here: https://github.com/xsa/unstatsppd</p> <p>Prerequisites: - Python Google Chart: http://pygooglechart.slowchop.com/ - Python Untappd API wrapper: https://github.com/xsa/PyUntappd</p> <p>Here's an output example with my data:</p> <p></p> <p>Published on Jun. 12, 2011</p>"},{"location":"articles/xmodmap-to-rescue-of-powerbook-belgian/","title":"Xmodmap to rescue of powerbook belgian","text":""},{"location":"articles/xmodmap-to-rescue-of-powerbook-belgian/#xmodmap-to-the-rescue-of-powerbook-belgian-keyboard","title":"xmodmap to the rescue of PowerBook Belgian keyboard","text":"<p>After <code>cwm(1)</code> release three got imported in the OpenBSD tree I thought I'd give it a try someday -- That day has arrived.</p> <p>My <code>-current</code> main terminal to hack is a PowerBook6,8 with a Belgian keyboard. Since I've been using X on this laptop with that keyboard I had to bring <code>xmodmap(1)</code> into the dance. After a few hours of fiddling with all those modifier keys, I finally came up with a <code>~/.Xmodmap</code> file that would suit my need in ways that the keyboard shortcuts would work as expected with <code>cwm(1)</code> and other applications.</p> <p>Nothing fancy, but maybe this could help other wandering souls:</p> <pre><code>clear Shift\nclear Lock\nclear Control\nclear Mod1\nclear Mod2\n\nkeycode 14 = parenleft 5 braceleft bracketleft\nkeycode 20 = parenright degree braceright bracketright\nkeycode 23 = Tab ISO_Left_Tab\nkeycode 35 = dollar asterisk EuroSign yen\nkeycode 36 = Return\nkeycode 37 = Control_L\nkeycode 46 = l L bar bar\nkeycode 49 = less greater guillemotright guillemotleft\nkeycode 50 = Shift_L\nkeycode 51 = dead_grave sterling\nkeycode 54 = c C copyright copyright\nkeycode 57 = n N asciitilde dead_tilde\nkeycode 60 = colon slash division backslash\nkeycode 64 = Alt_L\nkeycode 66 = Caps_Lock\nkeycode 94 = at numbersign\nkeycode 107 = BackSpace Delete Delete BackSpace\nkeycode 115 = Mode_switch\nkeycode 116 = Mode_switch\n\nadd Shift = Shift_L\nadd Control = Control_L\nadd Lock = Caps_Lock\n\nadd Mod1 = Alt_L\nadd Mod2 = Mode_switch\n</code></pre> <p>Just add the following line to your <code>.xinitrc</code> file and you are done:</p> <p><code>xmodmap ~/.Xmodmap</code></p> <p>Published on Aug. 01, 2007</p>"}]}